generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Employee {
  id               Int                @id @default(autoincrement())
  nome             String
  email            String
  cpf              String             @unique
  telefone         String?
  celular          String?
  employee_address Employee_address[]

  @@map("employee")
}

model Client {
  id              Int              @id @default(autoincrement())
  name            String
  rg              String
  date_birth      DateTime
  type            String
  cpf             String           @unique
  email           String
  situation       Boolean          @default(false)
  telefone        String?
  celular         String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now())
  cliente_address Client_address[]

  @@map("client")
}

model Supplier {
  id               Int                @id @default(autoincrement())
  nome             String
  rg               String
  data_nascimento  DateTime
  tipo             String
  cpf              String             @unique
  email            String
  situacao         Boolean            @default(false)
  telefone         String?
  celular          String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  supplier_address Supllier_address[]

  @@map("supplier")
}

model Supllier_address {
  id          Int      @id @default(autoincrement())
  address_id  Int
  supllier_id Int
  address     Address  @relation(fields: [address_id], references: [id], onDelete: Cascade)
  supplier    Supplier @relation(fields: [supllier_id], references: [id], onDelete: Cascade)

  @@map("supplier_address")
}

model Client_address {
  id         Int     @id @default(autoincrement())
  client_id  Int
  address_id Int
  address    Address @relation(fields: [address_id], references: [id], onDelete: Cascade)
  client     Client  @relation(fields: [client_id], references: [id], onDelete: Cascade)

  @@map("client_address")
}

model Employee_address {
  id                Int      @id @default(autoincrement())
  employee_id       Int
  address_id        Int
  adress_relation   Address  @relation(fields: [address_id], references: [id])
  employee_relation Employee @relation(fields: [employee_id], references: [id])

  @@map("employee_address")
}

model Address {
  id                Int                @id @default(autoincrement())
  cep               String
  logradouro        String
  numero            Int
  complemento       String
  bairro            String
  cidade            String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  cliente_enderecos Client_address[]
  employee_address  Employee_address[]
  supplier_address  Supllier_address[]

  @@map("address")
}
